package uniandes.rebel.archimate;

import java.util.Date;
import java.util.Map;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;

import rebel_archimate.Project;
import rebel_archimate.Rebel_archimateFactory;
import rebel_archimate.View;

public class AMModel {

	private Project project;
	private Rebel_archimateFactory factory;
	private Resource resource;
	private String uriAddress;
	
	public Resource createModel(String projectName, String modelFileName) throws Exception {

		Resource.Factory.Registry reg = Resource.Factory.Registry.INSTANCE;
		Map<String, Object> m = reg.getExtensionToFactoryMap();
		m.put("rebel_archimate", new XMIResourceFactoryImpl());

		ResourceSet resourceSet = new ResourceSetImpl();
		
		// Validar si existe la carpeta, si no existe, entonces se crea
		if(ArchimateUtil.checkOrCreateFolder(projectName)) {
		
			uriAddress = "/Users/borisperezg/rebel/"+projectName+"/archimate/" + modelFileName + ".rebel_archimate";
	
			resource = resourceSet.createResource(URI.createURI(uriAddress));
	
			// --------------------
			// ROOT NODE CREATION
			project = factory.createProject();
			project.setName(projectName);
			project.setModelingDate(new Date());
			resource.getContents().add(project);
			
		}else{
			throw new Exception("No se pudo crear la carpeta del proyecto para Archimate ::: "+projectName+" - "+modelFileName);
		}
		
		return resource;
	}
	
	public View createView(String name) {
		View obj = factory.createView();
		obj.setName(name);
		return obj;
	}
	
}
